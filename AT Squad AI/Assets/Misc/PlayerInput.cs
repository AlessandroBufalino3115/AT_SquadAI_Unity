//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Misc/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""b59a37cf-229f-48c3-b634-cafcd5ea9103"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""75098b31-15af-45ee-9168-0ac3da9e791c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FormationChange"",
                    ""type"": ""Button"",
                    ""id"": ""51ff045e-4eed-4cc3-807b-095cdbe4481f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""473869ae-12fc-4212-9d8a-ddf10d7150e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectTeamMate"",
                    ""type"": ""Button"",
                    ""id"": ""f1fbc362-ba36-4252-a5a7-e3b407c5a041"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeselectTeam"",
                    ""type"": ""Button"",
                    ""id"": ""932022df-13d1-485d-a330-fd159ff346ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TopViewToggle"",
                    ""type"": ""Button"",
                    ""id"": ""ab378bba-5431-4324-b54a-07caec3a67f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""moveFloorsView"",
                    ""type"": ""Value"",
                    ""id"": ""c7aecff4-4ae4-42a4-95d7-f01cbd90f01a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""3f168e56-4cf7-4297-b5da-e87404f6f51b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""34815341-2966-4a00-9bda-90522326c451"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8ace7e9d-4987-4ea5-b22f-232f43ed7ab6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f52b0261-0071-4362-9dfe-a9db6b8131f5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""380cc205-f900-4f64-8ebe-0a0212c2b14d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e2ec45e2-1e7d-4929-a37a-ded55936b19c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FormationChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a04be5b0-d761-4a8f-aa6f-d1fb23b35bd4"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae7c1a90-2245-42af-aeef-212db2949674"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTeamMate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f77c7dac-4489-42e0-8892-c67d8ad8be7c"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": ""MultiTap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeselectTeam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c39e6cef-472d-4bb9-9cdc-ee7928734817"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TopViewToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""334b54bd-9583-4142-814d-b748800c7519"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveFloorsView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""69805ad3-3bd8-4565-8682-4c433ad8680c"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveFloorsView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""15e3dcbe-65c2-469a-97e9-8af2fc7f8438"",
                    ""path"": ""<Keyboard>/rightBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moveFloorsView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_FormationChange = m_Player.FindAction("FormationChange", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_SelectTeamMate = m_Player.FindAction("SelectTeamMate", throwIfNotFound: true);
        m_Player_DeselectTeam = m_Player.FindAction("DeselectTeam", throwIfNotFound: true);
        m_Player_TopViewToggle = m_Player.FindAction("TopViewToggle", throwIfNotFound: true);
        m_Player_moveFloorsView = m_Player.FindAction("moveFloorsView", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_FormationChange;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_SelectTeamMate;
    private readonly InputAction m_Player_DeselectTeam;
    private readonly InputAction m_Player_TopViewToggle;
    private readonly InputAction m_Player_moveFloorsView;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @FormationChange => m_Wrapper.m_Player_FormationChange;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @SelectTeamMate => m_Wrapper.m_Player_SelectTeamMate;
        public InputAction @DeselectTeam => m_Wrapper.m_Player_DeselectTeam;
        public InputAction @TopViewToggle => m_Wrapper.m_Player_TopViewToggle;
        public InputAction @moveFloorsView => m_Wrapper.m_Player_moveFloorsView;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @FormationChange.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFormationChange;
                @FormationChange.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFormationChange;
                @FormationChange.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFormationChange;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @SelectTeamMate.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectTeamMate;
                @SelectTeamMate.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectTeamMate;
                @SelectTeamMate.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectTeamMate;
                @DeselectTeam.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDeselectTeam;
                @DeselectTeam.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDeselectTeam;
                @DeselectTeam.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDeselectTeam;
                @TopViewToggle.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTopViewToggle;
                @TopViewToggle.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTopViewToggle;
                @TopViewToggle.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTopViewToggle;
                @moveFloorsView.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveFloorsView;
                @moveFloorsView.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveFloorsView;
                @moveFloorsView.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveFloorsView;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @FormationChange.started += instance.OnFormationChange;
                @FormationChange.performed += instance.OnFormationChange;
                @FormationChange.canceled += instance.OnFormationChange;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @SelectTeamMate.started += instance.OnSelectTeamMate;
                @SelectTeamMate.performed += instance.OnSelectTeamMate;
                @SelectTeamMate.canceled += instance.OnSelectTeamMate;
                @DeselectTeam.started += instance.OnDeselectTeam;
                @DeselectTeam.performed += instance.OnDeselectTeam;
                @DeselectTeam.canceled += instance.OnDeselectTeam;
                @TopViewToggle.started += instance.OnTopViewToggle;
                @TopViewToggle.performed += instance.OnTopViewToggle;
                @TopViewToggle.canceled += instance.OnTopViewToggle;
                @moveFloorsView.started += instance.OnMoveFloorsView;
                @moveFloorsView.performed += instance.OnMoveFloorsView;
                @moveFloorsView.canceled += instance.OnMoveFloorsView;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnFormationChange(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnSelectTeamMate(InputAction.CallbackContext context);
        void OnDeselectTeam(InputAction.CallbackContext context);
        void OnTopViewToggle(InputAction.CallbackContext context);
        void OnMoveFloorsView(InputAction.CallbackContext context);
    }
}
